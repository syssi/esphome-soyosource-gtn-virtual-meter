substitutions:
  name: soyosource_gtn_virtual_meter
  device0: firstfloor_soyosource_gtn_virtual_meter
  device1: groundfloor_soyosource_gtn_virtual_meter
  external_components_source: github://syssi/esphome-soyosource-gtn-virtual-meter@main

esphome:
  name: ${name}
  platform: ESP32
  board: esp-wrover-kit

external_components:
  - source: ${external_components_source}
    refresh: 0s

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0

# api:
ota:

logger:
  baud_rate: 0
  level: INFO

mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client

uart:
  - id: uart0
    baud_rate: 4800
    tx_pin: GPIO1
    rx_pin: GPIO3
  - id: uart1
    baud_rate: 4800
    tx_pin: GPIO14
    rx_pin: GPIO4

soyosource_modbus:
  - id: modbus0
    uart_id: uart0
  - id: modbus1
    uart_id: uart1

soyosource_inverter:
  - id: inverter0
    soyosource_modbus_id: modbus0
  - id: inverter1
    soyosource_modbus_id: modbus1

soyosource_virtual_meter:
  - id: virtualmeter0
    soyosource_modbus_id: modbus0
    update_interval: 3s
    # the state of this sensor (instantaneous power in watt) is used as source
    power_id: powermeter0
    min_power_demand: 0
    max_power_demand: 900
    # A positive buffer value (10) tries to avoid exporting power to the grid (demand - 10 watts)
    # A negative buffer value (-10) exports power to the grid (demand + 10 watts)
    buffer: 10
  - id: virtualmeter1
    soyosource_modbus_id: modbus1
    update_interval: 3s
    # the state of this sensor (instantaneous power in watt) is used as source
    power_id: powermeter1
    min_power_demand: 0
    max_power_demand: 900
    # A positive buffer value (10) tries to avoid exporting power to the grid (demand - 10 watts)
    # A negative buffer value (-10) exports power to the grid (demand + 10 watts)
    buffer: 10

binary_sensor:
  - platform: soyosource_inverter
    soyosource_inverter_id: inverter0
    fan_running:
      name: "${device0} fan running"
  - platform: soyosource_inverter
    soyosource_inverter_id: inverter1
    fan_running:
      name: "${device1} fan running"

sensor:
  - platform: soyosource_virtual_meter
    soyosource_virtual_meter_id: virtualmeter0
    power_demand:
      name: "${device0} power demand"
  - platform: soyosource_virtual_meter
    soyosource_virtual_meter_id: virtualmeter1
    power_demand:
      name: "${device1} power demand"

  - platform: soyosource_inverter
    soyosource_inverter_id: inverter0
    operation_mode_id:
      name: "${device0} operation mode id"
    battery_voltage:
      name: "${device0} battery voltage"
    battery_current:
      name: "${device0} battery current"
    battery_power:
      name: "${device0} battery power"
    ac_voltage:
      name: "${device0} ac voltage"
    ac_frequency:
      name: "${device0} ac frequency"
    temperature:
      name: "${device0} temperature"
  - platform: soyosource_inverter
    soyosource_inverter_id: inverter1
    operation_mode_id:
      name: "${device1} operation mode id"
    battery_voltage:
      name: "${device1} battery voltage"
    battery_current:
      name: "${device1} battery current"
    battery_power:
      name: "${device1} battery power"
    ac_voltage:
      name: "${device1} ac voltage"
    ac_frequency:
      name: "${device1} ac frequency"
    temperature:
      name: "${device1} temperature"

  # mqtt subscribe example
  - id: powermeter0
    internal: true
    platform: mqtt_subscribe
    name: "${device0} instantaneous power consumption"
    topic: "smartmeter/sensor/firstfloor/obis/1-0:16.7.0/255/value"
    accuracy_decimals: 2
    unit_of_measurement: W
    device_class: power
  - id: powermeter1
    internal: true
    platform: mqtt_subscribe
    name: "${device1} instantaneous power consumption"
    topic: "smartmeter/sensor/groundfloor/obis/1-0:16.7.0/255/value"
    accuracy_decimals: 2
    unit_of_measurement: W
    device_class: power

#  # import smartmeter reading from homeassistant f.e.
#  # requires the "api" component see above
#  - platform: homeassistant
#    id: powermeter0
#    name: "${device0} smartmeter instantaneous power"
#    entity_id: sensor.firstfloor_smartmeter_instantaneous_power
#  - platform: homeassistant
#    id: powermeter1
#    name: "${device1} smartmeter instantaneous power"
#    entity_id: sensor.groundfloor_smartmeter_instantaneous_power

text_sensor:
  - platform: soyosource_inverter
    soyosource_inverter_id: inverter0
    operation_mode:
      name: "${device0} operation mode"
  - platform: soyosource_inverter
    soyosource_inverter_id: inverter1
    operation_mode:
      name: "${device1} operation mode"

switch:
  - platform: soyosource_virtual_meter
    soyosource_virtual_meter_id: virtualmeter0
    manual_mode:
      name: "${device0} manual mode"
  - platform: soyosource_virtual_meter
    soyosource_virtual_meter_id: virtualmeter1
    manual_mode:
      name: "${device1} manual mode"
