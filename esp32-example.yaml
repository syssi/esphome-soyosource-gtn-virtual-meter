substitutions:
  name: soyosource-gtn-virtual-meter
  external_components_source: github://syssi/esphome-soyosource-gtn-virtual-meter@main

esphome:
  name: ${name}
  platform: ESP32
  board: esp-wrover-kit

external_components:
  - source: ${external_components_source}
    refresh: 0s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
# api:

logger:
  baud_rate: 0

mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client

uart:
  baud_rate: 4800
  tx_pin: GPIO1
  rx_pin: GPIO3

soyosource_modbus:
  name: firstfloor_inverter

soyosource_inverter:

soyosource_virtual_meter:
  # the state of this sensor (instantaneous power in watt) is used as source
  power_id: powermeter
  power_sensor_inactivity_timeout: 20s
  power_demand_calculation: NEGATIVE_MEASUREMENTS_REQUIRED
  min_power_demand: 0
  max_power_demand: 900
  # Split/distribute the power demand if you have multiple inverters attached to the same RS485 bus
  power_demand_divider: 1
  # A positive buffer value (10) tries to avoid exporting power to the grid (demand - 10 watts)
  # A negative buffer value (-10) exports power to the grid (demand + 10 watts)
  buffer: 10
  update_interval: 3s

binary_sensor:
  - platform: soyosource_inverter
    fan_running:
      name: "${name} fan running"

sensor:
  - platform: soyosource_virtual_meter
    power_demand:
      name: "${name} power demand"

  - platform: soyosource_inverter
    operation_mode_id:
      name: "${name} operation mode id"
    battery_voltage:
      name: "${name} battery voltage"
    battery_current:
      name: "${name} battery current"
    battery_power:
      name: "${name} battery power"
    ac_voltage:
      name: "${name} ac voltage"
    ac_frequency:
      name: "${name} ac frequency"
    temperature:
      name: "${name} temperature"

  # mqtt subscribe example
  - id: powermeter
    internal: true
    platform: mqtt_subscribe
    name: "${name} instantaneous power consumption"
    topic: "smartmeter/sensor/groundfloor/obis/1-0:16.7.0/255/value"
    accuracy_decimals: 2
    unit_of_measurement: W
    device_class: power
    filters:
      - throttle_average: 15s

text_sensor:
  - platform: soyosource_inverter
    operation_mode:
      name: "${name} operation mode"
  - platform: soyosource_virtual_meter
    operation_mode:
      name: "${name} operation mode"

number:
  - platform: soyosource_virtual_meter
    manual_power_demand:
      name: "${name} manual power demand"
    max_power_demand:
      name: "${name} max power demand"
      initial_value: 600
      restore_value: true

switch:
  - platform: soyosource_virtual_meter
    manual_mode:
      name: "${name} manual mode"
      restore_mode: RESTORE_DEFAULT_ON
    emergency_power_off:
      name: "${name} emergency power off"
      restore_mode: RESTORE_DEFAULT_OFF

#  # import smartmeter reading from homeassistant
#  # requires the "api" component see above
#  - platform: homeassistant
#    id: powermeter
#    name: "${name} smartmeter instantaneous power"
#    entity_id: sensor.firstfloor_smartmeter_instantaneous_power
#    filters:
#      - throttle_average: 15s
#      - filter_out: nan
